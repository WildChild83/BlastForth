( ---------------------------------------------------------------------------- )
( **************************************************************************** )
(       Make your Sega Genesis speak English                                   )
( **************************************************************************** )
( ---------------------------------------------------------------------------- )

( ---------------------------------------------------------------------------- )
(                                                                              )
(       Dependencies:                                                          )
(           - 68k.fs                                                           )
(           - forth.fs                                                         )
(           - core.fs                                                          )
(           - vdp.fs                                                           )
(                                                                              )
( ---------------------------------------------------------------------------- )
Forth definitions

( ---------------------------------------------------------------------------- )
(       Glyph Data                                                             )
( ---------------------------------------------------------------------------- )
create glyph-data  bytes[
%00000000 %00000000 %00000000 %00000000 %00000000 %00000000 %00000000 \ [space]
%00111100 %01100110 %01101110 %01111110 %01110110 %01100110 %00111100 \ 0
%00011000 %01111000 %00011000 %00011000 %00011000 %00011000 %01111110 \ 1
%00111100 %01100110 %00000110 %00011100 %00110000 %01100000 %01111110 \ 2
%00111100 %01100110 %00000110 %00011100 %00000110 %01100110 %00111100 \ 3
%00001100 %00011100 %00111100 %01101100 %11001100 %11111110 %00001100 \ 4
%01111110 %01100000 %01111100 %00000110 %00000110 %01100110 %00111100 \ 5
%00111100 %01100110 %01100000 %01111100 %01100110 %01100110 %00111100 \ 6
%01111110 %00000110 %00001100 %00011000 %00011000 %00011000 %00011000 \ 7
%00111100 %01100110 %01100110 %00111100 %01100110 %01100110 %00111100 \ 8
%00111100 %01100110 %01100110 %00111110 %00000110 %01100110 %00111100 \ 9
%01111100 %11000110 %11000110 %11111110 %11000110 %11000110 %11000110 \ A   11
%11111100 %11000110 %11000110 %11111100 %11000110 %11000110 %11111100 \ B   12
%11111110 %11000110 %11000110 %11000000 %11000110 %11000110 %11111110 \ C   13
%11111100 %11000110 %11000110 %11000110 %11000110 %11000110 %11111100 \ D   14
%11111110 %11000000 %11000000 %11111000 %11000000 %11000000 %11111110 \ E   15
%11111110 %11000000 %11000000 %11111000 %11000000 %11000000 %11000000 \ F   16
%11111110 %11000110 %11000000 %11001110 %11000110 %11000110 %11111110 \ G   17
%11000110 %11000110 %11000110 %11111110 %11000110 %11000110 %11000110 \ H   18
%01111110 %00011000 %00011000 %00011000 %00011000 %00011000 %01111110 \ I   19
%00111110 %00001100 %00001100 %00001100 %11001100 %11001100 %11111100 \ J   20
%11000110 %11001110 %11011100 %11111000 %11111100 %11001110 %11000110 \ K   21
%11000000 %11000000 %11000000 %11000000 %11000000 %11000000 %11111110 \ L   22
%11000110 %11101110 %11111110 %11010110 %11010110 %11000110 %11000110 \ M   23
%11000110 %11100110 %11110110 %11111110 %11011110 %11001110 %11000110 \ N   24
%11111110 %11000110 %11000110 %11000110 %11000110 %11000110 %11111110 \ O   25
%11111110 %11000110 %11000110 %11111110 %11000000 %11000000 %11000000 \ P   26
%11111110 %11000110 %11000110 %11000110 %11000110 %11011100 %11101110 \ Q   27
%11111110 %11000110 %11000110 %11111100 %11000110 %11000110 %11000110 \ R   28
%11111110 %11000110 %11000000 %11111110 %00000110 %11000110 %11111110 \ S   29
%01111110 %00011000 %00011000 %00011000 %00011000 %00011000 %00011000 \ T   30
%11000110 %11000110 %11000110 %11000110 %11000110 %11000110 %11111110 \ U   31
%11000110 %11000110 %11000110 %11101110 %01111100 %00111000 %00010000 \ V   32
%11000110 %11000110 %11010110 %11010110 %11111110 %11101110 %11000110 \ W   33
%11000110 %11101110 %01111100 %00111000 %01111100 %11101110 %11000110 \ X   34
%11000110 %11000110 %11101110 %01111100 %00111000 %00111000 %00111000 \ Y   35
%11111110 %00001110 %00011100 %00111000 %01110000 %11100000 %11111110 \ Z   36
%00110000 %00110000 %00110000 %00110000 %00110000 %00000000 %00110000 \ !   37
%00111100 %01100110 %11001110 %11011010 %11011110 %11000000 %01111100 \ @   38
%01101100 %11111110 %01101100 %01101100 %11111110 %01101100 %00000000 \ #   39
%00011000 %01111110 %11011000 %01111110 %00011011 %01111110 %00011000 \ $   40
%11000110 %11001110 %00011100 %00111000 %01110000 %11100110 %11000110 \ %   41
%00010000 %00111000 %01101100 %11000110 %10000010 %00000000 %00000000 \ ^   42
%00111000 %01101100 %00111000 %01111010 %11001110 %11011100 %01110110 \ &   43
%00011000 %11011011 %00111100 %11011011 %00011000 %00000000 %00000000 \ *   44
%00011000 %00110000 %00110000 %00110000 %00110000 %00110000 %00011000 \ (   45
%00011000 %00001100 %00001100 %00001100 %00001100 %00001100 %00011000 \ )   46
%00000000 %00000000 %00000000 %01111110 %00000000 %00000000 %00000000 \ -   47
%00000000 %00011000 %00011000 %01111110 %00011000 %00011000 %00000000 \ +   48
%00000110 %00001110 %00011100 %00111000 %01110000 %11100000 %11000000 \ /   49
%00000000 %00001110 %00111000 %01100000 %00111000 %00001110 %00000000 \ <   50
%00000000 %00000000 %01111110 %00000000 %01111110 %00000000 %00000000 \ =   51
%00000000 %01110000 %00011100 %00000110 %00011100 %01110000 %00000000 \ >   52
%00111100 %01100110 %00000110 %00011100 %00011000 %00000000 %00011000 \ ?   53
%00011000 %00011000 %00010000 %00000000 %00000000 %00000000 %00000000 \ '   54
%01100110 %01100110 %00100100 %00000000 %00000000 %00000000 %00000000 \ "   55
%00000000 %00000000 %00000000 %00000000 %00000000 %00011000 %00011000 \ .   56
%00000000 %00011000 %00011000 %00000000 %00000000 %00011000 %00011000 \ :   57
%00111100 %00110000 %00110000 %00110000 %00110000 %00110000 %00111100 \ [   58
%00011000 %00011000 %00011000 %00011000 %00011000 %00011000 %00011000 \ |   59
%00111100 %00001100 %00001100 %00001100 %00001100 %00001100 %00111100 \ ]   60
%00000000 %00000000 %01110110 %11011100 %00000000 %00000000 %00000000 \ ~   61
%00000000 %00000000 %00000000 %00000000 %00011000 %00011000 %00110000 \ ,   62
%00011000 %00011000 %00000000 %00000000 %00011000 %00011000 %00110000 \ ;   63
]

( ---------------------------------------------------------------------------- )
(       Load Text to Video Memory                                              )
( ---------------------------------------------------------------------------- )
rawcode (init-glyph) \ A1=vdp data, A2=glyph data
    7 d5 do [a2]+ d1 b move, 8 d4 do 1 # d1 b rol, 1 # d1 bittest, d2 z<> set?,
    tos d2 b and, 4 # d3 lsl, d2 d3 b or, loop d3 [a1] move, loop return, end

code (init-text) ( color -- )
    vdp-data [#] a1 lea,  glyph-data [#] a2 lea, d7 clear,
    62 d6 do (init-glyph) displacement brasub, d7 [a1] move, loop
     2 d6 do d7 [a1] move, (init-glyph) displacement brasub, loop
    tos pop, next

: init-text ( color -- ) 2autoinc   $0000 write-vram   (init-text) ;

( ---------------------------------------------------------------------------- )
(       ASCII Conversion                                                       )
( ---------------------------------------------------------------------------- )
Host definitions   create ascii-table
 0 hostc, 37 hostc, 55 hostc, 39 hostc, 40 hostc, 41 hostc, 43 hostc, 54 hostc,
45 hostc, 46 hostc, 44 hostc, 48 hostc, 62 hostc, 47 hostc, 56 hostc, 49 hostc,
 1 hostc,  2 hostc,  3 hostc,  4 hostc,  5 hostc,  6 hostc,  7 hostc,  8 hostc,
 9 hostc, 10 hostc, 57 hostc, 63 hostc, 50 hostc, 51 hostc, 52 hostc, 53 hostc,
38 hostc, 11 hostc, 12 hostc, 13 hostc, 14 hostc, 15 hostc, 16 hostc, 17 hostc,
18 hostc, 19 hostc, 20 hostc, 21 hostc, 22 hostc, 23 hostc, 24 hostc, 25 hostc,
26 hostc, 27 hostc, 28 hostc, 29 hostc, 30 hostc, 31 hostc, 32 hostc, 33 hostc,
34 hostc, 35 hostc, 36 hostc, 58 hostc, 59 hostc, 60 hostc, 42 hostc, 53 hostc,
53 hostc, 11 hostc, 12 hostc, 13 hostc, 14 hostc, 15 hostc, 16 hostc, 17 hostc,
18 hostc, 19 hostc, 20 hostc, 21 hostc, 22 hostc, 23 hostc, 24 hostc, 25 hostc,
26 hostc, 27 hostc, 28 hostc, 29 hostc, 30 hostc, 31 hostc, 32 hostc, 33 hostc,
34 hostc, 35 hostc, 36 hostc, 58 hostc, 59 hostc, 60 hostc, 61 hostc, 53 hostc,
: ascii ( c -- c' ) 32 -   0 max 95 min   ascii-table + c@ ;

Forth definitions {
:  string, ( addr u -- ) 0 ?do count ascii c, loop drop ;
: cstring, ( addr u -- ) dup c, string, ;
:  string" ( "text" -- ) [char] " parse  string, ;
: cstring" ( "text" -- ) [char] " parse cstring, ;
}

( ---------------------------------------------------------------------------- )
(       Terminal Display                                                       )
( ---------------------------------------------------------------------------- )
hvalue attributes

cvalue tx
cvalue ty
hvalue terminal

: at-xy ( x y -- ) 0 max 27 min to ty   0 max 31 min to tx ;
: page ( -- ) [ 0 0 ]2L at-xy ;

: cr ( -- ) 0 to tx  ty 1+ 28 hmod to ty ;

: emit ( c -- )
    attributes +  terminal ty 7 lshift + tx 2* + write-vram  h>vdp 1 +to tx ;

: type ( addr u -- ) 0 ?do count emit loop drop ;

synonym bl false

: space    ( -- ) bl emit ;
: spaces ( n -- ) 0 max 0 ?do bl emit loop ;

( ---------------------------------------------------------------------------- )
(       String Words                                                           )
( ---------------------------------------------------------------------------- )
code (s") ( -- addr u )
    tos push, tos clear, [tp]+ tos c move, tp push,
    tp d1 move, tos d1 add, d1 inc, -2 # d1 c and, d1 tp move, next
code (.") ( -- )
    tos push, tos clear, [tp]+ tos c move, tp push,
    tp d1 move, tos d1 add, d1 inc, -2 # d1 c and, d1 tp move, 
    ' type [#] dfa lea, [dfa]+ a1 move, [a1] jump, end

{ : s" ( "text" -- ) comp-only [char] " parse (s") cstring, alignrom ; }
{ : ." ( "text" -- ) comp-only [char] " parse (.") cstring, alignrom ; }

( ---------------------------------------------------------------------------- )
( ---------------------------------------------------------------------------- )
( ---------------------------------------------------------------------------- )
( ---------------------------------------------------------------------------- )
( ---------------------------------------------------------------------------- )
( ---------------------------------------------------------------------------- )





















